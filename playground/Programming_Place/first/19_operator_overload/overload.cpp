#if 0

第１９章　演算子のオーバーロード

https://programming-place.net/ppp/contents/cpp/language/019.html

演算子オーバーロード
クラス定義の中にメンバ関数の定義を書く方法について説明する。

関係演算子、等価演算子
戻り値がbool型のconstメンバ関数で定義するのが一般的。
==演算子をオーバーロードした場合、必ず!=演算子もオーバーロードすること。
!=演算子のオーバーロードは、対称性を確保するために以下のような実装にすると良い。（１）
[== , !=] [<, >=] [>, <=] は、それぞれ対応する。

算術演算子
クラス外で定義するのが良い。
constメンバ関数として定義する。
引数は、自身と同じクラス型のconst参照
戻り値は、自身と同じクラス型の実体
ローカル変数を用意し、計算結果を格納する。



#endif

// (1)
bool	classA::operator!=(const classA& rhs)
{
	return (!(*this == rhs));
}
